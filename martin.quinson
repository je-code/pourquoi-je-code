![Martin Quinson](http://www.loria.fr/~quinson/tete-small.png)

### Pourquoi codes-tu ?

J'a beaucoup hésité sur la réponse à donner à une question aussi
vaste. Que répondriez-vous si quelqu'un vous demandait « pourquoi
lis-tu » ? Au fond, je crois que je code parce que je sais faire, tout
simplement. Je passe beaucoup de temps sur ordinateur ou avec des
objets programmables, et mécaniser une partie des choses que j'ai à
faire me semble naturel (et en plus, maintenant, je suis en partie
payé pour le faire).

### Comment as-tu appris ?

Mes premières lignes de code étaient dans des jeux en Basic auxquels
je jouais, enfant. J'en ai modifié quelques uns, mais rien de très
impressionnant. Plus tard, j'ai appris en regardant par dessus
l'épaule de mon père et j'ai fait quelques programmes qui dessinaient
des formes géométriques intéressantes. Bien plus tard, j'ai fait une
licence d'informatique, puis une maîtrise puis une thèse dans ce
domaine. Je suis encore en train d'apprendre.

### Quel est ton langage préféré ?

Il y a un vieux proverbe chinois qui dit: 

> Chaque langage a son objectif, humble ou ambitieux ;

> Chaque langage exprime le Yin et le Yang du logiciel à sa manière ;

> Chaque langage a sa place dans le Tao ; (mais évite de programmer en PHP si tu peux).

Quand je fais un programme graphique, je le fais en scala (ou Java).
Quand je fais un programme qui doit aller vite ou toucher le système,
je le fais en C. Quand je fais des statistiques, je le fais en R.
Quand j'automatise une tâche de tous les jours, c'est en Perl. 
Je n'ai pas vraiment de chouchou, cela dépend de ce que je veux faire.

### Pourquoi chacun devrait-il apprendre à programmer ou être initié ?

Il est très important que tous les citoyens du futur apprennent à
coder pour éviter de voir se former une caste des scribes qui
maîtrisent la création vraiment originale sur ordinateur, tandis que
tous les autres sont relégués au rôle de consommateur passif.

Tous ne programmeront pas toute la journée, mais il est important que
chacun ait un sens commun suffisant pour savoir ce qu'on peut espérer
d'un ordinateur, et ce qui n'est pas raisonnable. 

Un sens commun équivalent s'est développé vis-à-vis de l'électricité
en un siècle, et il me semble important de diffuser des réflexes
équivalents vis-à-vis des systèmes informatiques de nos jours : On ne
change pas l'ampoule les pieds dans la baignoire, et on n'utilise pas
le même mot de passe de partout. 

Apprendre à programmer est le moyen le plus simple (et le plus
agréable) de comprendre ce qu'on peut raisonnablement attendre d'un
ordinateur, même pour ceux qui ne programmeront pas dans leur vie
active. 

Si on ne sait pas programmer, l'informatique semble magique. On est 
à la merci des manipulations de ceux qui savent. 

Programme, ou soit programmé! 

